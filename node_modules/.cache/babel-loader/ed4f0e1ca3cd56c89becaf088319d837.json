{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycheung/Desktop/CS5610_WebDevelopment/lec6/ashley_cheung_ma5/src/component/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Grid.css';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Grid(props) {\n  _s();\n\n  // set original state of box too white\n  // need to use useState to updated the front end (as well as back end) \n  // if just use a let variable here, it will update the backend (can be shown\n  // using console.log(\"whitebox\") but it will not render (the front end won't get updated))\n  const [count, updateCount] = useState(0); // function updateCount() {\n  //     if ( === \"box-white\") {\n  //         curCount = props.count - 1;\n  //     } else {\n  //         curCount = props.count + 1;\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count:\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        square: \"box-white\",\n        onClick: updateCount,\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        square: \"box-white\",\n        onClick: updateCount,\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        square: \"box-white\",\n        onClick: updateCount,\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        square: \"box-white\",\n        onClick: updateCount,\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Grid, \"DIkCHZzzlG3chD1WwCcXkx79xYE=\");\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/ashleycheung/Desktop/CS5610_WebDevelopment/lec6/ashley_cheung_ma5/src/component/Grid.jsx"],"names":["React","useState","Square","Grid","props","count","updateCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC;AAEA;AACA;AACA;AAEA,QAAK,CAACC,KAAD,EAAQC,WAAR,IAAuBL,QAAQ,CAAC,CAAD,CAApC,CAPgC,CAShC;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,sBACI;AAAA,4BAEI;AAAA,2BAAYI,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAG,WAAjB;AAA6B,QAAA,OAAO,EAAEC,WAAtC;AAAmD,QAAA,KAAK,EAAED;AAA1D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAG,WAAjB;AAA6B,QAAA,OAAO,EAAEC,WAAtC;AAAmD,QAAA,KAAK,EAAED;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAG,WAAjB;AAA6B,QAAA,OAAO,EAAEC,WAAtC;AAAmD,QAAA,KAAK,EAAED;AAA1D;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAG,WAAjB;AAA6B,QAAA,OAAO,EAAEC,WAAtC;AAAmD,QAAA,KAAK,EAAED;AAA1D;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA3CuBF,I;;KAAAA,I","sourcesContent":["import React, { useState } from 'react';\n\nimport './Grid.css';\nimport Square from './Square';\n\nexport default function Grid(props) {\n    // set original state of box too white\n \n    // need to use useState to updated the front end (as well as back end) \n    // if just use a let variable here, it will update the backend (can be shown\n    // using console.log(\"whitebox\") but it will not render (the front end won't get updated))\n    \n    const[count, updateCount] = useState(0);\n\n    // function updateCount() {\n    //     if ( === \"box-white\") {\n    //         curCount = props.count - 1;\n    //     } else {\n    //         curCount = props.count + 1;\n    //     }\n    // }\n\n\n    \n\n    return(\n        <div>\n\n            <div>Count:{count}</div>\n            <div class=\"container\">\n                <Square square = \"box-white\" onClick={updateCount} count={count}></Square>\n                <Square square = \"box-white\" onClick={updateCount} count={count}></Square>\n                <Square square = \"box-white\" onClick={updateCount} count={count}></Square>\n                <Square square = \"box-white\" onClick={updateCount} count={count}></Square>\n                \n            </div>\n\n        </div>\n\n      \n\n    );\n\n\n    \n\n\n\n}"]},"metadata":{},"sourceType":"module"}